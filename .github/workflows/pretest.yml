name: "Pre-review Tests"

on:
  push:
    branches:
      - admin/**
  pull_request:

jobs:
  static-checks:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Checkout using commit hash to make "no-commit-to-branch" test pass.
        ref: ${{ github.sha }}

    - name: Setup Python
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '3.9'

    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key:
          static-checks-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys:
          static-checks-

    - name: Setup pre-commit
      run: |
        pip install pre-commit

    - name: Check
      run: |
        pre-commit run -a --show-diff-on-failure

    - name: Type Check
      run: |
        # TODO: Test against various NumPy/SciPy versions.
        pip install 'numpy==1.25.*' 'scipy==1.10.*'
        pip install 'mypy==1.5.*' 'types-setuptools==57.4.14' 'pytest>=7.2'
        pytest -v tests/typing_tests/test_typing.py

  build-docs:
    runs-on: ubuntu-22.04
    env:
      CUPY_CI: GitHub

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: build-docs-${{ github.sha }}
        restore-keys: |
          build-docs-${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
          build-docs-

    - name: Setup ccache
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ccache
        echo "PATH=/usr/lib/ccache:${PATH}" >> "${GITHUB_ENV}"
        ccache --show-stats -v

    - name: Build
      run: |
        pip install -U pip wheel
        READTHEDOCS=True pip install -v -e .
        ccache --max-size 0.5Gi --cleanup --show-stats

    - name: Docs Build
      run: |
        # Test to detect invalid escape sequences in docstrings (#1619)
        python -Werror::DeprecationWarning -m compileall -f -q cupy cupyx examples tests docs
        pushd docs
        pip install -r requirements.txt
        SPHINXOPTS="-W --keep-going -j 4" make html
        popd

  build-cuda:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    env:
      CACHE_DIR: "/tmp/cache"
      DOCKER_IMAGE: "ghcr.io/cupy/cupy-ci"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup cache
      uses: actions/cache@v4
      with:
        path: ${{ env.CACHE_DIR }}
        key: build-cuda-${{ github.sha }}
        restore-keys: |
          build-cuda-${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
          build-cuda-

    - name: Log in to the GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build & Test
      run: |
        # Build CuPy with CUDA, then test that CuPy can be imported without CUDA.
        ./.pfnci/linux/run.sh cuda-build build test

    - name: Push Cache
      if: github.event_name == 'push'
      run: |
        ./.pfnci/linux/run.sh cuda-build push

  build-rocm:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build & Test
      run: |
        docker run --rm -v "${PWD}:/src" -w /src "rocm/dev-ubuntu-20.04:5.0-complete" bash .github/workflows/pretest-rocm-test.sh
